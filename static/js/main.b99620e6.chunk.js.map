{"version":3,"sources":["core/Loading/assets/soccer-ball.png","core/Loading/styles.ts","core/Loading/index.tsx","common/data/PlayersProvider.tsx","common/components/header/assets/hero.jpeg","common/components/header/styled.ts","common/components/header/index.tsx","core/Home/components/Table/components/TableHead/styles.ts","core/Home/components/Table/components/TableHead/index.tsx","core/Home/components/Table/components/TableToolbar/styled.ts","core/Home/components/Table/components/TableToolbar/index.tsx","core/Home/components/Table/styles.ts","core/Home/components/Table/helpers.ts","core/Home/components/Table/index.tsx","core/Home/index.tsx","common/api/graphqlClient.tsx","common/components/Footer/styles.ts","common/components/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rotate","keyframes","LoadingIcon","styled","img","IconWrapper","div","Loading","src","soccerBall","alt","PlayerContext","createContext","players","PlayersProvider","children","useQuery","query","res","useState","setPlayers","filteredPlayers","setFilteredPlayers","data","fetching","error","useEffect","message","Provider","value","length","StyledHeader","NavBar","HeroImage","heroImage","Header","FilterIconHiddenLabel","span","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","id","label","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","StyledToolbar","Toolbar","SearchFieldWrapper","StyledFormControl","FormControl","DropdownWrapper","ClearButton","Button","SearchWrapper","ToolbarWrapper","EnhancedTableToolbar","dispatch","clubs","positions","useContext","debouncedFunction","debounce","type","payload","InputLabel","Select","labelId","clubFilter","e","target","Array","from","keys","sort","name","club","get","MenuItem","variant","color","positionFilter","position","TextField","InputProps","startAdornment","InputAdornment","TableWrapper","StyledPaper","Paper","StyledTable","Table","descendingComparator","a","b","firstValue","secondValue","join","Number","getPlayerUrl","firstName","lastName","fullName","includes","names","split","replace","toLowerCase","getClubUrl","currencyFormatter","Intl","NumberFormat","style","currency","EnhancedTableInitialState","selected","page","rowsPerPage","search","Map","EnhancedTableReducer","state","action","forEach","player","playerPositions","set","EnhancedTable","useReducer","handleRequestSort","useCallback","handleSelectAllClick","newSelecteds","n","selectRow","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","playersToDisplay","array","comparator","stabilizedThis","el","index","stableSort","getComparator","filter","conditions","push","searchString","search_values","val","playerHasSearchValue","hasPosition","condition","getFilteredPlayers","TableContainer","stickyHeader","aria-labelledby","aria-label","TableBody","row","isItemSelected","baseSalary","guaranteedCompensation","hover","role","aria-checked","tabIndex","scope","rel","href","format","TablePagination","rowsPerPageOptions","component","count","onChangePage","onChangeRowsPerPage","Home","Consumer","graphqlClient","createClient","url","process","Wrapper","Footer","year","Date","getFullYear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b99620e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/soccer-ball.d31e0b4f.png\";","import styled, {keyframes} from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoadingIcon = styled.img`\n  width: 100px;\n  animation: ${rotate} 2s linear infinite;\n  margin-bottom: 10px;\n`\n\nexport const IconWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  > p {\n    text-align: center;\n  }\n`\n","import React from 'react'\n\nimport soccerBall from './assets/soccer-ball.png'\nimport { LoadingIcon, IconWrapper } from './styles'\n\nexport const Loading = () => {\n  return <IconWrapper>\n    <LoadingIcon src={soccerBall} alt=\"soccer ball\"/>\n    <p>Loading...</p>\n  </IconWrapper>\n}\n","import React, {ReactNode, createContext, useState, useEffect} from 'react'\nimport { useQuery } from 'urql'\n\nimport {Loading} from '../../core/Loading'\n\nimport {Player} from './types'\n\nconst PlayerQuery = `\n  query {\n    players {\n      id,\n      firstName,\n      lastName,\n      baseSalary,\n      guaranteedCompensation,\n      club {\n        id,\n        name,\n      },\n      positions {\n        id,\n        name\n      }\n    }\n  }\n`\n\ninterface PlayersContext {\n  players: Player[] | null,\n  setFilteredPlayers?: Function\n}\n\nexport const PlayerContext = createContext<PlayersContext>({players: null});\n\nexport const PlayersProvider = ({children}: {children: ReactNode}) => {\n  const [res] = useQuery({query: PlayerQuery})\n  const [players, setPlayers] = useState(null)\n  const [filteredPlayers, setFilteredPlayers] = useState([])\n\n  const {data, fetching, error} = res\n\n  useEffect(() => {\n    if (data && data.players) {\n      setPlayers(data.players)\n    }\n  }, [data])\n\n  if (fetching) return <Loading />;\n  if (error) return <p>Oh no... {error.message}</p>;\n\n  return (\n    <PlayerContext.Provider value={{players: filteredPlayers.length ? filteredPlayers : players, setFilteredPlayers}}>\n      {children}\n    </PlayerContext.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/hero.b6231777.jpeg\";","import styled from 'styled-components'\n\nimport heroImage from './assets/hero.jpeg'\n\nexport const StyledHeader = styled.div`\n`\n\nexport const NavBar = styled.div`\n  padding: 20px;\n`\n\nexport const HeroImage = styled.div`\n  height: 40vh;\n  background-image: url(${heroImage});\n  background-position: 40% 70%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n`\n","import React from 'react'\n\nimport {StyledHeader, NavBar, HeroImage} from './styled'\n\nexport const Header = () => {\n  return <StyledHeader>\n    <NavBar><h1>Major Soccer Geeks</h1></NavBar>\n    <HeroImage />\n  </StyledHeader>\n}\n","import styled from 'styled-components'\n\nexport const FilterIconHiddenLabel = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1;\n  margin: -1;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  top: 20;\n  width: 1;\n`\n","import React from 'react'\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {Player} from '../../../../../../common/data/types'\n\nimport {Order} from '../../types'\nimport {FilterIconHiddenLabel} from './styles'\n\ninterface TableHeadProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Player) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\ninterface HeadCell {\n  id: keyof Player;\n  label: string;\n}\n\nexport const EnhancedTableHead = (props: TableHeadProps) => {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof Player) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  const headCells: HeadCell[] = [\n    {id: 'firstName', label: 'Name'},\n    {id: 'baseSalary', label: 'Base Salary'},\n    {id: 'guaranteedCompensation', label: 'Guaranteed Compensation'},\n    {id: 'club', label: 'Club'},\n    {id: 'positions', label: 'Positions'},\n  ]\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'right'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <FilterIconHiddenLabel>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </FilterIconHiddenLabel>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import styled from 'styled-components'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledToolbar = styled(Toolbar)`\n  display: flex;\n  justify-content: flex-end;\n`\n\nexport const SearchFieldWrapper = styled.div`\n  margin-right: 10px;\n`\n\nexport const StyledFormControl = styled(FormControl)`\n  min-width: 150px !important;\n  margin-right: 10px !important;\n`\n\nexport const DropdownWrapper = styled.div`\n  margin-right: 30px;\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const ClearButton = styled(Button)`\n  font-size: 10px !important;\n  padding: 5px 10px !important;\n  min-width: unset !important;\n`\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const ToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n`\n","import React, {useContext} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport debounce from \"lodash/debounce\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport {PlayerContext} from '../../../../../../common/data/PlayersProvider'\nimport { Club, Position } from '../../../../../../common/data/types';\n\nimport {StyledToolbar, SearchFieldWrapper, StyledFormControl, DropdownWrapper, ClearButton, SearchWrapper, ToolbarWrapper} from './styled'\nimport {EnhancedTableReducerActions, EnhancedTableQuery} from '../../types'\n\ninterface EnhancedTableToolbarProps {\n  selected: string[];\n  dispatch: (value: EnhancedTableReducerActions) => void\n  query: EnhancedTableQuery\n  clubs: Map<string, Club>\n  positions: Map<string, Position>\n}\n\nexport const EnhancedTableToolbar = ({dispatch, query, clubs, positions}: EnhancedTableToolbarProps) => {\n  const {players} = useContext(PlayerContext);\n\n  const debouncedFunction = debounce((value) => {\n    if (!players) return null\n    if (!value) return dispatch({type: 'setSearch', payload: ''})\n\n    dispatch({type: 'setSearch', payload: value});\n  }, 500);\n\n  return (\n    <StyledToolbar>\n      <ToolbarWrapper>\n        <DropdownWrapper>\n          <StyledFormControl>\n            <InputLabel id=\"club-dropdown-label\">Club</InputLabel>\n            <Select\n              labelId=\"club-dropdown-label\"\n              id=\"club-dropdown\"\n              value={query.clubFilter}\n              onChange={(e) => dispatch({type: 'setClubFilter', payload: e.target.value as string})}\n            >\n              {Array.from(clubs.keys()).sort().map(name => {\n                const club = clubs.get(name)\n                return <MenuItem key={club!.id} value={club!.name}>{club!.name}</MenuItem>\n              })}\n            </Select>\n          </StyledFormControl>\n          <ClearButton variant=\"contained\" color=\"primary\" onClick={() => dispatch({type: 'setClubFilter', payload: ''})}>Clear</ClearButton>\n        </DropdownWrapper>\n\n        <DropdownWrapper>\n          <StyledFormControl>\n            <InputLabel id=\"positions-dropdown-label\">Positions</InputLabel>\n            <Select\n              labelId=\"positions-dropdown-label\"\n              id=\"positions-dropdown\"\n              value={query.positionFilter}\n              onChange={(e) => dispatch({type: 'setPositionsFilter', payload: e.target.value as string})}\n            >\n              {Array.from(positions.keys()).sort().map(name => {\n                const position = positions.get(name)\n                return <MenuItem key={position!.id} value={position!.name}>{position!.name}</MenuItem>\n              })}\n            </Select>\n          </StyledFormControl>\n          <ClearButton variant=\"contained\" color=\"primary\" onClick={() => dispatch({type: 'setPositionsFilter', payload: ''})}>Clear</ClearButton>\n        </DropdownWrapper>\n\n        <SearchWrapper>\n          <SearchFieldWrapper>\n          <TextField\n            id=\"standard-basic\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={(e) => debouncedFunction(e.target.value)}\n          />\n          </SearchFieldWrapper>\n        </SearchWrapper>\n      </ToolbarWrapper>\n    </StyledToolbar>\n  );\n};\n","import styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  max-width: 90%;\n  margin: 40px auto;\n`\n\nexport const StyledPaper = styled(Paper)`\n  width: 100%;\n`\n\nexport const StyledTable = styled(Table)`\n  min-width: 750px;\n`\n","import {Player} from '../../../../common/data/types' \n\nimport {EnhancedTableQuery} from './types'\n\nexport const descendingComparator = (a: Player, b: Player, orderBy: keyof Player): number => {\n  let firstValue = a[orderBy]\n  let secondValue = b[orderBy]\n\n  if (orderBy === 'club') {\n    firstValue = a[orderBy].name\n    secondValue = b[orderBy].name \n  }\n\n  if (orderBy === 'positions') {\n    firstValue = a[orderBy].map(position => position.name).join('')\n    secondValue = b[orderBy].map(position => position.name).join('')\n  }\n\n  // ! salaries are coming as string instead of numbers\n  if (orderBy === 'baseSalary' || orderBy === 'guaranteedCompensation') {\n    firstValue = Number(a[orderBy])\n    secondValue = Number(b[orderBy])\n  }\n\n  if (secondValue < firstValue) {\n    return -1;\n  }\n\n  if (secondValue > firstValue) {\n    return 1;\n  }\n\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nexport const getComparator = (order: Order, orderBy: keyof Player): (a: Player, b: Player) => number =>  {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport const stableSort = (array: Player[], comparator: (a: Player, b: Player) => number) => {\n  const stabilizedThis = array.map((el, index) => [el, index] as [Player, number]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport const getPlayerUrl = (firstName: string, lastName: string) => {\n  let fullName = `${firstName}${lastName ? '-' + lastName : ''}`\n\n  if (fullName.includes(\"\\\"\")) {\n    const names = fullName.split(\"\\\"\")\n\n    fullName = (names[0] + names[names.length - 1]).replace(' ', '')\n  }\n\n  return `\n    https://www.mlssoccer.com/players/${fullName.toLowerCase().replace(' ', '-')}\n  `\n}\n\nexport const getClubUrl = (club: string) => {\n  return `\n    https://www.mlssoccer.com/clubs/${club.toLowerCase().replace(' ', '-')}\n  `\n}\n\nexport const currencyFormatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })\n\nexport const playerHasSearchValue = (player: Player, value: string): boolean => {\n  const {firstName, lastName, club: {name: clubName}, positions} = player\n  const searchString = firstName + lastName + clubName + positions.map(position => position.name).join(',')\n  const search_values = value.split(' ')\n  const matches = search_values.filter(val => searchString.toLowerCase().includes(val.toLowerCase())).length\n\n  return matches === search_values.length\n}\n\nexport const getFilteredPlayers = (player: Player, query: EnhancedTableQuery) => {\n  const {search, clubFilter, positionFilter} = query\n  const conditions: boolean[] = []\n\n  if (search) {\n    conditions.push(playerHasSearchValue(player, search))\n  }\n\n  if (clubFilter) {\n    conditions.push(player.club.name === clubFilter)\n  }\n\n  if (positionFilter) {\n    let hasPosition = false\n\n    player.positions.forEach((position) => {\n      if (position.name === positionFilter) {\n        hasPosition = true\n        return\n      }\n    })\n\n    conditions.push(hasPosition)\n  }\n\n  return !conditions.filter(condition => !condition).length\n}\n","import React, { useReducer, useCallback, useEffect } from 'react'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Club, Player, Position} from '../../../../common/data/types'\n\nimport {EnhancedTableHead} from './components/TableHead'\nimport {EnhancedTableToolbar} from './components/TableToolbar'\nimport {TableWrapper, StyledPaper, StyledTable} from './styles'\nimport {EnhancedTableReducerActions, EnhancedTableReducerState, Order} from './types'\nimport {currencyFormatter, getComparator, getClubUrl, getPlayerUrl, stableSort, getFilteredPlayers} from './helpers'\n\nconst DEFAULT_ROWS_PER_PAGE = 25\n\nconst EnhancedTableInitialState = {\n  players: [] as Player[],\n  order: 'asc' as Order,\n  orderBy: 'id' as keyof Player,\n  selected: [] as string[],\n  page: 0,\n  rowsPerPage: DEFAULT_ROWS_PER_PAGE,\n  query: {\n    search: '',\n    clubFilter: '',\n    positionFilter: ''\n  },\n  clubs: new Map() as Map<string, Club>,\n  positions: new Map() as Map<string, Position>\n}\n\nconst EnhancedTableReducer = (state: EnhancedTableReducerState, action: EnhancedTableReducerActions) => {\n  switch (action.type) {\n    case 'setPlayers':\n      const clubs = new Map()\n      const positions = new Map()\n\n      action.payload.forEach(player => {\n        const {club, positions: playerPositions} = player\n\n        if (!clubs.get(club.name)) {\n          clubs.set(club.name, club)\n        }\n\n        playerPositions.forEach(position => {\n          if (!positions.get(position.name)) {\n            positions.set(position.name, position)\n          }\n        })\n      })\n\n      return {\n        ...state,\n        players: action.payload,\n        clubs,\n        positions\n      }\n    case 'setOrder':\n      return {\n        ...state,\n        order: action.payload.order,\n        orderBy: action.payload.orderBy\n      }\n    case 'setSelected':\n      return {\n        ...state,\n        selected: action.payload\n      }\n    case 'setPage':\n      return {\n        ...state,\n        page: action.payload\n      }\n    case 'setRowsPerPage':\n      return {\n        ...state,\n        page: action.payload.page,\n        rowsPerPage: action.payload.rowsPerPage\n      }\n    case 'setSearch':\n      return {\n        ...state,\n        page: 0,\n        query: {\n          ...state.query,\n          search: action.payload\n        }\n      }\n    case 'setClubFilter':\n      return {\n        ...state,\n        page: 0,\n        query: {\n          ...state.query,\n          clubFilter: action.payload\n        }\n      }\n    case 'setPositionsFilter':\n      return {\n        ...state,\n        page: 0,\n        query: {\n          ...state.query,\n          positionFilter: action.payload\n        }\n      }\n    default:\n      return state\n  }  \n}\n\n\n\nexport const EnhancedTable = ({players}: {players: Player[]} ) => {\n  const [{\n    order,\n    orderBy,\n    selected,\n    page,\n    rowsPerPage,\n    query,\n    clubs,\n    positions\n  }, dispatch] = useReducer(EnhancedTableReducer, EnhancedTableInitialState)\n\n  useEffect(() => {\n    dispatch({type: 'setPlayers', payload: players})\n  }, [players])\n\n  const handleRequestSort = useCallback((event: React.MouseEvent<unknown>, property: keyof Player) => {\n    const isAsc = orderBy === property && order === 'asc';\n    dispatch({type: 'setOrder', payload: { order: isAsc ? 'desc' : 'asc', orderBy: property }});\n  }, [order, orderBy])\n\n  const handleSelectAllClick = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = players.map((n) => n.id);\n      dispatch({type: 'setSelected', payload: newSelecteds});\n      return;\n    }\n    dispatch({type: 'setSelected', payload: []});\n  }, [players])\n\n  const selectRow = useCallback((id: string) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    dispatch({type: 'setSelected', payload: newSelected});\n  }, [selected])\n\n  const handleChangePage = useCallback((event: unknown, newPage: number) => {\n    dispatch({type: 'setPage', payload: newPage});\n  }, [])\n\n  const handleChangeRowsPerPage = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'setRowsPerPage', payload: { page: 0, rowsPerPage: parseInt(event.target.value, 10)}});\n  }, [])\n\n  const playersToDisplay = stableSort(players, getComparator(order, orderBy)).filter(player => getFilteredPlayers(player, query))\n\n  return (\n    <TableWrapper>\n      <StyledPaper>\n        <EnhancedTableToolbar selected={selected} dispatch={dispatch} query={query} clubs={clubs} positions={positions} />\n        <TableContainer>\n          <StyledTable\n            stickyHeader\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={players.length}\n            />\n            <TableBody>\n              {playersToDisplay.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: Player, index: number) => {\n                  const isItemSelected = selected.indexOf(row.id) !== -1;\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const {\n                    firstName,\n                    lastName,\n                    baseSalary,\n                    guaranteedCompensation,\n                    club,\n                    positions: playerPositions\n                  } = row\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                          onClick={() => selectRow(row.id)}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\" id={labelId} scope=\"row\">\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={getPlayerUrl(firstName, lastName)}>{firstName} {lastName}</a>\n                      </TableCell>\n                      <TableCell align=\"right\">{`${currencyFormatter.format(baseSalary)}`}</TableCell>\n                      <TableCell align=\"right\">{`${currencyFormatter.format(guaranteedCompensation)}`}</TableCell>\n                      <TableCell align=\"right\">\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={getClubUrl(club.name)}>{club.name}</a>\n                      </TableCell>\n                      <TableCell align=\"right\">{playerPositions.map(({name}) => name).join(', ')}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </StyledTable>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[DEFAULT_ROWS_PER_PAGE, 50, 100]}\n          component=\"div\"\n          count={playersToDisplay.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </StyledPaper>\n    </TableWrapper>\n  );\n}\n","import React from 'react'\n\nimport {PlayerContext} from '../../common/data/PlayersProvider'\nimport {Header} from '../../common/components/header'\n\nimport {EnhancedTable} from './components/Table'\n\nconst Home = () => {\n  return <PlayerContext.Consumer>\n    {({players}) => {\n      if (players) {\n        return <>\n          <Header />\n          <EnhancedTable players={players} />\n        </>\n      }\n\n      return null\n    }}\n  </PlayerContext.Consumer>\n\n}\n\nexport default Home\n","import { createClient } from 'urql';\n\nexport const graphqlClient = createClient({\n  url: `${process.env.REACT_APP_BASE_API_URL}/graphql/`,\n});\n\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n  text-align: center;\n  background: #EEEEEE;\n  font-size: 13px;\n`\n","import React from 'react'\n\nimport { Wrapper } from './styles'\n\nexport const Footer = () => {\n  const year = new Date().getFullYear()\n\n  return <Wrapper>\n    <p>&#169; {year} Maxime Leduc</p>\n  </Wrapper>\n}\n","import React from 'react';\nimport { Provider } from 'urql';\n\nimport Home from './core/Home'\nimport {graphqlClient} from './common/api/graphqlClient'\nimport {PlayersProvider} from './common/data/PlayersProvider'\nimport { Footer } from './common/components/Footer';\n\nfunction App() {\n  return (\n    <Provider value={graphqlClient}>\n      <PlayersProvider>\n        <Home />\n        <Footer />\n      </PlayersProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}