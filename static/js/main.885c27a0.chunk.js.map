{"version":3,"sources":["common/data/PlayersProvider.tsx","common/components/header/assets/hero.jpeg","common/components/header/styled.ts","common/components/header/index.tsx","core/Home/components/TableHead/styles.ts","core/Home/components/TableHead/index.tsx","core/Home/components/TableToolbar/styled.ts","core/Home/components/TableToolbar/index.tsx","core/Home/components/Table/styles.ts","core/Home/components/Table/helpers.ts","core/Home/components/Table/index.tsx","core/Home/index.tsx","common/api/graphqlClient.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PlayerContext","createContext","players","PlayersProvider","children","useQuery","query","res","useState","setPlayers","filteredPlayers","setFilteredPlayers","data","fetching","error","useEffect","message","Provider","value","length","StyledHeader","styled","div","NavBar","HeroImage","heroImage","Header","FilterIconHiddenLabel","span","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","id","label","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","StyledToolbar","Toolbar","SearchFieldWrapper","StyledIcon","SearchIcon","EnhancedTableToolbar","useContext","debouncedFunction","debounce","searchPlayers","output","filter","player","searchString","firstName","lastName","club","name","positions","position","join","search_values","split","val","toLowerCase","includes","hasValue","TextField","e","target","TableWrapper","StyledPaper","Paper","StyledTable","Table","descendingComparator","a","b","firstValue","secondValue","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","currencyFormatter","Intl","NumberFormat","style","currency","TableContainer","stickyHeader","aria-labelledby","aria-label","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","baseSalary","guaranteedCompensation","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","format","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Home","Consumer","graphqlClient","createClient","url","process","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885c27a0.chunk.js","sourcesContent":["import React, {ReactNode, createContext, useState, useEffect} from 'react'\nimport { useQuery } from 'urql'\n\nimport {Player} from './interfaces'\n\nconst PlayerQuery = `\n  query {\n    players {\n      id,\n      firstName,\n      lastName,\n      baseSalary,\n      guaranteedCompensation,\n      club {\n        id,\n        name,\n      },\n      positions {\n        id,\n        name\n      }\n    }\n  }\n`\n\ninterface PlayersContext {\n  players: Player[] | null,\n  setFilteredPlayers?: Function\n}\n\nexport const PlayerContext = createContext<PlayersContext>({players: null});\n\nexport const PlayersProvider = ({children}: {children: ReactNode}) => {\n  const [res] = useQuery({query: PlayerQuery})\n  const [players, setPlayers] = useState(null)\n  const [filteredPlayers, setFilteredPlayers] = useState([])\n\n  const {data, fetching, error} = res\n\n  useEffect(() => {\n    if (data && data.players) {\n      setPlayers(data.players)\n    }\n  }, [data])\n\n  if (fetching) return <p>Loading...</p>;\n  if (error) return <p>Oh no... {error.message}</p>;\n\n  return (\n    <PlayerContext.Provider value={{players: filteredPlayers.length ? filteredPlayers : players, setFilteredPlayers}}>\n      {children}\n    </PlayerContext.Provider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/hero.b6231777.jpeg\";","import styled from 'styled-components'\n\nimport heroImage from './assets/hero.jpeg'\n\nexport const StyledHeader = styled.div`\n`\n\nexport const NavBar = styled.div`\n  padding: 20px;\n`\n\nexport const HeroImage = styled.div`\n  height: 60vh;\n  background-image: url(${heroImage});\n  background-position: 40% 60%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n`\n","import React from 'react'\n\nimport {StyledHeader, NavBar, HeroImage} from './styled'\n\nexport const Header = () => {\n  return <StyledHeader>\n    <NavBar><h1>Major Soccer Geeks</h1></NavBar>\n    <HeroImage />\n  </StyledHeader>\n}\n","import styled from 'styled-components'\n\nexport const FilterIconHiddenLabel = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1;\n  margin: -1;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  top: 20;\n  width: 1;\n`\n","import React from 'react'\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {Player} from '../../../../common/data/interfaces'\n\nimport {Order} from '../Table/interfaces'\nimport {FilterIconHiddenLabel} from './styles'\n\ninterface TableHeadProps {\n  numSelected: number;\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Player) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\ninterface HeadCell {\n  id: keyof Player;\n  label: string;\n}\n\nexport const EnhancedTableHead = (props: TableHeadProps) => {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property: keyof Player) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property);\n  };\n\n  const headCells: HeadCell[] = [\n    {id: 'firstName', label: 'Name'},\n    {id: 'baseSalary', label: 'Base Salary'},\n    {id: 'guaranteedCompensation', label: 'Guaranteed Compensation'},\n    {id: 'club', label: 'Club'},\n    {id: 'positions', label: 'Positions'},\n  ]\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'right'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <FilterIconHiddenLabel>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </FilterIconHiddenLabel>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import styled from 'styled-components'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport const StyledToolbar = styled(Toolbar)`\n  display: flex;\n  justify-content: flex-end;\n`\n\nexport const SearchFieldWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin: 20px 0;\n`\n\nexport const StyledIcon = styled(SearchIcon)`\n  margin-right: 10px;\n`\n","import React, {useContext} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport debounce from \"lodash/debounce\";\n\nimport {PlayerContext} from '../../../../common/data/PlayersProvider'\nimport {Player} from '../../../../common/data/interfaces'\n\nimport {StyledToolbar, SearchFieldWrapper, StyledIcon} from './styled'\n\ninterface EnhancedTableToolbarProps {\n  selected: string[];\n}\n\nconst hasValue = (player: Player, value: string): boolean => {\n  const {firstName, lastName, club: {name: clubName}, positions} = player\n  const searchString = firstName + lastName + clubName + positions.map(position => position.name).join(',')\n  const search_values = value.split(' ')\n  const matches = search_values.filter(val => searchString.toLowerCase().includes(val.toLowerCase())).length\n\n  return matches === search_values.length\n}\n\nexport const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  const {players, setFilteredPlayers} = useContext(PlayerContext);\n  // todo: do something with the selected players?\n  // const {selected} = props\n\n  const debouncedFunction = debounce((value) => {\n    searchPlayers(value);\n  }, 500);\n\n  const searchPlayers = (value: string) => {\n    if (!players) return null\n    if (!value && setFilteredPlayers) return setFilteredPlayers([])\n\n    const output = players.filter((player) => hasValue(player, value))\n\n    if(setFilteredPlayers) {\n      setFilteredPlayers(output)\n    }\n  }\n\n  return (\n    <StyledToolbar>\n      <SearchFieldWrapper>\n        <StyledIcon /><TextField id=\"standard-basic\" label=\"Search\" onChange={(e) => debouncedFunction(e.target.value)} />\n      </SearchFieldWrapper>\n    </StyledToolbar>\n  );\n};\n","import styled from 'styled-components'\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\n\nexport const TableWrapper = styled.div`\n  width: 100%;\n  max-width: 90%;\n  margin: 40px auto;\n`\n\nexport const StyledPaper = styled(Paper)`\n  width: 100%;\n`\n\nexport const StyledTable = styled(Table)`\n  min-width: 750px;\n`\n","import {Player} from '../../../../common/data/interfaces' \n\nexport const descendingComparator = (a: Player, b: Player, orderBy: keyof Player): number => {\n  let firstValue = a[orderBy]\n  let secondValue = b[orderBy]\n\n  if (orderBy === 'club') {\n    firstValue = a[orderBy].name\n    secondValue = b[orderBy].name \n  }\n\n  if (orderBy === 'positions') {\n    firstValue = a[orderBy].map(position => position.name).join('')\n    secondValue = b[orderBy].map(position => position.name).join('')\n  }\n\n  if (secondValue < firstValue) {\n    return -1;\n  }\n\n  if (secondValue > firstValue) {\n    return 1;\n  }\n\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nexport const getComparator = (order: Order, orderBy: keyof Player): (a: Player, b: Player) => number =>  {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport const stableSort = (array: Player[], comparator: (a: Player, b: Player) => number) => {\n  const stabilizedThis = array.map((el, index) => [el, index] as [Player, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n","import React from 'react'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Player} from '../../../../common/data/interfaces'\n\nimport {EnhancedTableHead} from '../TableHead'\nimport {EnhancedTableToolbar} from '../TableToolbar'\nimport {TableWrapper, StyledPaper, StyledTable} from './styles'\nimport {Order} from './interfaces'\nimport {getComparator, stableSort} from './helpers'\n\nconst DEFAULT_ROWS_PER_PAGE = 25\n\nexport const EnhancedTable = ({players}: {players: Player[]} ) => {\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof Player>('id');\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(DEFAULT_ROWS_PER_PAGE);\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Player) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = players.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\n\n  const currencyFormatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })\n\n  return (\n    <TableWrapper>\n      <StyledPaper>\n        <EnhancedTableToolbar selected={selected} />\n        <TableContainer>\n          <StyledTable\n            stickyHeader\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={players.length}\n            />\n            <TableBody>\n              {stableSort(players, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: Player, index: number) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const {\n                    firstName,\n                    lastName,\n                    baseSalary,\n                    guaranteedCompensation,\n                    club,\n                    positions\n                  } = row\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\" id={labelId} scope=\"row\">\n                        {firstName} {lastName}\n                      </TableCell>\n                      <TableCell align=\"right\">{`${currencyFormatter.format(baseSalary)}`}</TableCell>\n                      <TableCell align=\"right\">{`${currencyFormatter.format(guaranteedCompensation)}`}</TableCell>\n                      <TableCell align=\"right\">{club.name}</TableCell>\n                      <TableCell align=\"right\">{positions.map(({name}) => name).join(', ')}</TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </StyledTable>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[DEFAULT_ROWS_PER_PAGE, 50, 100]}\n          component=\"div\"\n          count={players.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </StyledPaper>\n    </TableWrapper>\n  );\n}\n","import React from 'react'\n\nimport {PlayerContext} from '../../common/data/PlayersProvider'\nimport {Header} from '../../common/components/header'\n\nimport {EnhancedTable} from './components/Table'\n\nconst Home = () => {\n  return <PlayerContext.Consumer>\n    {({players}) => {\n      if (players) {\n        return <>\n          <Header />\n          <EnhancedTable players={players} />\n        </>\n      }\n\n      return null\n    }}\n  </PlayerContext.Consumer>\n\n}\n\nexport default Home\n","import { createClient } from 'urql';\n\nexport const graphqlClient = createClient({\n  url: `${process.env.REACT_APP_BASE_API_URL}/graphql/`,\n});\n\n","import React from 'react';\nimport { Provider } from 'urql';\n\nimport Home from './core/Home'\nimport {graphqlClient} from './common/api/graphqlClient'\nimport {PlayersProvider} from './common/data/PlayersProvider'\n\nfunction App() {\n  return (\n    <Provider value={graphqlClient}>\n      <PlayersProvider>\n        <Home />\n      </PlayersProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}